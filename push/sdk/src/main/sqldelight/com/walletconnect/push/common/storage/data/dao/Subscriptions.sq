import kotlin.Boolean;
import kotlin.String;
import kotlin.Pair;
import kotlin.collections.Map;

CREATE TABLE Subscriptions (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    request_id INTEGER UNIQUE NOT NULL,
    subscribe_topic TEXT NOT NULL,
    dapp_did_public_key TEXT NOT NULL,
    self_public_key TEXT NOT NULL,
    response_topic TEXT NOT NULL,
    account TEXT NOT NULL,
    dapp_uri TEXT NOT NULL,
    did_jwt TEXT NOT NULL,
    map_of_scope TEXT AS Map<String, Pair<String, Boolean>> NOT NULL,
    expiry INTEGER NOT NULL,
    dapp_generated_public_key TEXT DEFAULT NULL,
    push_topic TEXT DEFAULT NULL
);

insertOrReplaceSubscribeRequested:
INSERT OR REPLACE INTO Subscriptions(request_id, subscribe_topic, dapp_did_public_key, self_public_key, response_topic, account, dapp_uri, did_jwt, map_of_scope, expiry)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

getAllSubscriptions:
SELECT request_id, subscribe_topic, dapp_did_public_key, self_public_key, response_topic, account, dapp_uri, did_jwt, map_of_scope, expiry, dapp_generated_public_key, push_topic
FROM Subscriptions;

updateSubscriptionScopeAndJwtByPushTopic:
UPDATE OR REPLACE Subscriptions
SET map_of_scope = ?, did_jwt = ?, expiry = ?
WHERE push_topic = ?;

deleteByTopicByPushTopic    :
DELETE FROM Subscriptions
WHERE push_topic = ?;

deleteByTopicByRequestId:
DELETE FROM Subscriptions
WHERE request_id = ?;

getSubscribeByRequestId:
SELECT request_id, subscribe_topic, dapp_did_public_key, self_public_key, response_topic, account, dapp_uri, did_jwt, map_of_scope, expiry, dapp_generated_public_key, push_topic
FROM Subscriptions
WHERE request_id = ?;

getSubscribeByDappGeneratedPublicKey:
SELECT request_id, subscribe_topic, dapp_did_public_key, self_public_key, response_topic, account, dapp_uri, did_jwt, map_of_scope, expiry, dapp_generated_public_key, push_topic
FROM Subscriptions
WHERE dapp_generated_public_key = ?;

updateOrReplaceToResponded:
UPDATE OR REPLACE Subscriptions
SET dapp_generated_public_key = ?, push_topic = ?, expiry = ?
WHERE request_id = ?;